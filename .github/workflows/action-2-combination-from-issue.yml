name: "Action 2C: Generate Combinations (from Issue attachment)"

on:
  issues:
    types: [opened, edited]

jobs:
  check-and-process:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'testforge-upload')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract file URL from issue
        id: extract
        run: |
          echo "Extracting file URL from issue body..."

          # Extract first .xlsx or .csv URL from issue body
          FILE_URL=$(echo '${{ github.event.issue.body }}' | grep -oP 'https://[^\s]+\.(xlsx|csv)' | head -n 1)

          if [ -z "$FILE_URL" ]; then
            echo "No file URL found in issue body"
            exit 1
          fi

          echo "file_url=$FILE_URL" >> $GITHUB_OUTPUT
          echo "Found file: $FILE_URL"

      - name: Download file from issue
        run: |
          echo "Downloading file from GitHub..."
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ steps.extract.outputs.file_url }}" \
            -o uploaded_file.xlsx

          ls -lh uploaded_file.xlsx

      - name: Set up Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: '3.14.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start FastAPI server
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 3000 > server.log 2>&1 &
          echo $! > server.pid
          sleep 10

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:3000/health > /dev/null; do sleep 1; done'
          echo "Server is ready!"

      - name: Generate test combinations
        run: |
          echo "Uploading file to generate combinations..."
          curl -X POST http://localhost:3000/api/v1/combination-test-case \
            -F "file=@uploaded_file.xlsx" \
            -o combination_testcases.xlsx \
            --fail-with-body

          echo "Combination file generated successfully!"
          ls -lh combination_testcases.xlsx

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Upload combination file
        uses: actions/upload-artifact@v4
        with:
          name: test-combinations-issue-${{ github.event.issue.number }}
          path: combination_testcases.xlsx
          retention-days: 14

      - name: Comment on issue with result
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ github.event.issue.number }};
            const artifactUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

            const message = [
              'âœ… Test combinations generated successfully!',
              '',
              `**Artifact:** \`test-combinations-issue-${issueNumber}\``,
              '',
              `**Download from:** ${artifactUrl}`,
              '',
              'Next steps:',
              '1. Download the `combination_testcases.xlsx` artifact',
              '2. Fill in `[Response]` columns',
              '3. Create a new issue with label `testforge-compile` and attach the filled file'
            ].join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
