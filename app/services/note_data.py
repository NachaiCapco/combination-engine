"""
Centralized note data for Excel generation.
Used by combination_service and example_service to ensure consistency.
"""

from typing import Dict, List

def get_note_data() -> Dict[str, List[str]]:
    """
    Get standardized note sheet data with all prefix documentation.
    
    Returns:
        Dictionary with note sheet columns
    """
    return {
        "Category": [
            "API Configuration",
            "API Configuration",
            "Request - Headers",
            "Request - Path Parameters",
            "Request - Query Parameters",
            "Request - Query Parameters",
            "Request - Body",
            "Request - Body (Nested)",
            "Request - Body (Array)",
            "Response Validation - Status",
            "Response Validation - Body",
            "Response Validation - Body (Operators)",
            "Response Validation - Body (Type Casting)",
            "Response Validation - Headers",
            "Special Values - Sentinel Keywords",
            "Special Values - Sentinel Keywords",
            "Special Values - Sentinel Keywords",
            "Special Values - Sentinel Keywords",
            "Special Values - Blank Cell",
            "Assertion Operators - Comparison",
            "Assertion Operators - Comparison",
            "Assertion Operators - Comparison",
            "Assertion Operators - Comparison",
            "Assertion Operators - String",
            "Assertion Operators - String",
            "Assertion Operators - Numeric Range",
            "Assertion Operators - Type Validation",
            "Assertion Operators - Type Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Assertion Operators - Structure Validation",
            "Data Types",
            "Data Types",
            "Data Types",
            "Data Types",
            "Examples - Basic",
            "Examples - Operators",
            "Examples - Type Casting",
            "Examples - Complex",
            "Examples - Sentinel Values",
            "Examples - Null Validation",
            "Examples - Empty Validation",
            "Notes",
            "Notes",
            "Notes",
        ],
        "Prefix Format": [
            "[API]endpoint",
            "[API]Method",
            "[Request][Header]<header-name>",
            "[Request][Params]<param-name>",
            "[Request][Query]<query-name>",
            "[Request][Query]<query-name>",
            "[Request][Body]<field-name>",
            "[Request][Body]<parent>.<child>",
            "[Request][Body]<array>[<index>].<field>",
            "[Response][API]status",
            "[Response][Body]<json-path>",
            "[Response][Body]<json-path>:<operator>",
            "[Response][Body]<json-path>:<operator>[Type:<type>]",
            "[Response][Header]<header-name>",
            "[EMPTY] or [EMPTY_STRING]",
            "[NULL]",
            "[EMPTY_ARRAY]",
            "[EMPTY_OBJECT]",
            "(leave cell blank)",
            "eq (default)",
            "ne",
            "gt",
            "lt",
            "contains",
            "regex",
            "between",
            "is_null",
            "is_not_null",
            "is_empty",
            "is_not_empty",
            "is_array",
            "is_object",
            "is_string",
            "is_number",
            "is_bool",
            "[Type:int] or [Type:integer]",
            "[Type:float] or [Type:number]",
            "[Type:bool] or [Type:boolean]",
            "[Type:string] (default)",
            "[Response][Body]id",
            "[Response][Body]age:gt[Type:int]",
            "[Response][Body]active[Type:bool]",
            "[Response][Body]score:between[Type:float]",
            "[Request][Body]name with value [EMPTY]",
            "[Response][Body]error:is_null",
            "[Response][Body]items:is_empty",
            "",
            "",
            "",
        ],
        "Example": [
            "https://api.example.com/users/{id}",
            "POST",
            "x-api-key",
            "id",
            "page",
            "status",
            "username",
            "profile.name",
            "children[0].name",
            "200",
            "data.hasdata",
            "age:gt",
            "score:between[Type:float]",
            "x-token",
            "[EMPTY]",
            "[NULL]",
            "[EMPTY_ARRAY]",
            "[EMPTY_OBJECT]",
            "",
            "value == expected",
            "value != expected",
            "value > expected (numeric)",
            "value < expected (numeric)",
            "substring in value",
            "regex pattern match",
            "low <= value <= high",
            "field is null",
            "field is not null",
            "string/array/object is empty",
            "string/array/object is not empty",
            "field is array",
            "field is object/dict",
            "field is string",
            "field is number",
            "field is boolean",
            "age, quantity, count",
            "price, rating, percentage",
            "active, enabled, isValid",
            "name, email, description",
            "123",
            "18",
            "true",
            "50.5,80.9",
            "{\"name\": \"\"}",
            "true",
            "true",
            "",
            "",
            "",
        ],
        "Sample Value": [
            "https://api.example.com/users/123",
            "GET / POST / PUT / DELETE / PATCH",
            "abc123xyz",
            "123",
            "1",
            "PAID",
            "john_doe",
            "John Doe",
            "Alice",
            "200 / 201 / 400 / 401 / 404 / 500",
            "true",
            "18",
            "50.5,80.9",
            "abc123",
            "→ Sends empty string \"\"",
            "→ Sends JSON null",
            "→ Sends empty array []",
            "→ Sends empty object {}",
            "→ Field omitted from request",
            "Equal (exact match)",
            "Not equal",
            "Greater than",
            "Less than",
            "Contains substring",
            "Regular expression",
            "Between range (comma/colon/semicolon separated)",
            "Check if response field is null",
            "Check if response field is not null",
            "Check if value is empty (\"\", [], {})",
            "Check if value is not empty",
            "Check if value is JSON array",
            "Check if value is JSON object",
            "Check if value is string type",
            "Check if value is number type",
            "Check if value is boolean type",
            "Integer numbers",
            "Floating-point numbers",
            "Boolean values (true/false, 1/0, yes/no)",
            "String values (default if type not specified)",
            "Equality check (string)",
            "Checks age > 18 (integer)",
            "Checks boolean equality",
            "Checks 50.5 ≤ score ≤ 80.9 (float range)",
            "Send empty string explicitly",
            "Validate error field is null",
            "Validate items array is empty",
            "After generating combinations, add [Response] columns",
            "System will generate Robot Framework test cases with type-aware assertions",
            "Use sentinel keywords for edge case testing (null, empty values)",
        ],
        "Description": [
            "API endpoint URL (path params use {param_name})",
            "HTTP method for the request",
            "Custom request header (e.g., API key, authorization)",
            "Path parameter to replace in URL (Reserved for future use)",
            "Query parameter added to URL (?page=1&status=PAID)",
            "Multiple query params are combined automatically",
            "Simple field in request body JSON",
            "Nested object field (uses dot notation)",
            "Array element field (uses bracket notation)",
            "Expected HTTP status code for validation",
            "Expected value in response body (JSON path, default eq operator)",
            "Expected value with custom operator (e.g., gt, lt, contains)",
            "Expected value with operator and explicit type casting",
            "Expected response header value",
            "Explicitly send empty string (not null, not omitted)",
            "Explicitly send JSON null value",
            "Explicitly send empty array []",
            "Explicitly send empty object {}",
            "Omit field from request entirely (not sent in JSON)",
            "Exact equality (used when no operator specified)",
            "Not equal comparison",
            "Greater than (requires numeric type)",
            "Less than (requires numeric type)",
            "Check if value contains substring",
            "Match against regular expression pattern",
            "Check if value is within numeric range (requires Type:int or Type:float)",
            "Validate that response field value is null (use with true/false expected value)",
            "Validate that response field value is not null",
            "Validate that value is empty (works for strings, arrays, objects)",
            "Validate that value is not empty",
            "Validate that response field is a JSON array (list)",
            "Validate that response field is a JSON object (dictionary)",
            "Validate that response field is a string",
            "Validate that response field is a number (int or float)",
            "Validate that response field is a boolean",
            "For whole numbers (automatically converts to integer)",
            "For decimal numbers (automatically converts to float)",
            "For true/false values (accepts: true/false, 1/0, yes/no, y/n, t/f)",
            "For text values (no conversion, default behavior)",
            "Simple equality check without type conversion",
            "Age must be greater than 18 (compares as integers)",
            "Active flag must be true (compares as boolean)",
            "Score must be between 50.5 and 80.9 (compares as floats)",
            "Test API handling of empty string input",
            "Test API returns null error when successful",
            "Test API returns empty items array when no data",
            "Use operators and types to create powerful, flexible assertions",
            "All type conversions are automatic based on [Type:...] tag",
            "Sentinel keywords enable comprehensive edge case and boundary testing",
        ],
    }
